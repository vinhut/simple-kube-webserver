apiVersion: v1
kind: Service
metadata:
  name: kubetest
  labels:
    app: kubetest
    tier: server
spec:
  ports:
  - name: web
    protocol: TCP
    port: 80
    targetPort: 80
  type: NodePort
#  loadBalancerIP: 35.190.57.1
  selector:
    app: kubetest
    tier: server
---
apiVersion: v1
kind: Service
metadata:
  name: kubetest-int
  annotations:
    cloud.google.com/load-balancer-type: "internal"
  labels:
    app: kubetest-int
    tier: server
spec:
  ports:
  - name: web
    protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer
  loadBalancerIP: 10.148.0.10
  selector:
    app: kubetest
    tier: server
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: basic-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: kubernetes-service-ip-001
spec:
  backend:
    serviceName: kubetest
    servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kubetest
spec:
  replicas: 10
  template:
    metadata:
      labels:
        app: kubetest
        tier: server
    spec:
      containers:
      - name: kubetest
        image: vinhut/simple-kube-app:green
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 200Mi
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 20
          timeoutSeconds: 1
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 80
            httpHeaders:
              - name: X-Custom-Header
                value: Test
          initialDelaySeconds: 25
          periodSeconds: 5
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: kubetest
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: kubetest
  minReplicas: 10
  maxReplicas: 20
  targetCPUUtilizationPercentage: 50
